serviceMonitor:
  enabled: true
ingress:
  enabled: true
  ingressClassName: traefik
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-traefik
  pathType: Prefix
  hosts:
    - dummy
  tls:
    - secretName: grafana-tls
      hosts:
        - dummy
resources:
  limits:
    cpu: 1000m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

grafana.ini:
  server:
    grpc_server_max_recv_msg_size: 0
    grpc_server_max_send_msg_size: 0
  users:
    default_theme: system
  tracing.opentelemetry.otlp:
    address: opentelemetry-collector.observability:4317
    propagation: w3c

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:

      - name: Mimir
        uid: prometheus
        type: prometheus
        url: http://mimir-nginx.mimir/prometheus
        access: proxy
        jsonData:
          manageAlerts: true
          alertmanagerUid: alertmanager
          prometheusType: Mimir
          exemplarTraceIdDestinations:
            - name: trace_id
              datasourceUid: tempo

      #    - name: Mimir Alertmanager
      #      uid: alertmanager
      #      type: alertmanager
      #      url: http://mimir-nginx
      #      access: proxy
      #      jsonData:
      #        handleGrafanaManagedAlerts: true
      #        exemplarTraceIdDestinations:
      #        - name: trace_id
      #          datasourceUid: tempo

      - name: Loki
        uid: loki
        type: loki
        url: http://loki-gateway.loki
        access: proxy
        editable: false
        orgId: 1
        secureJsonData:
          httpHeaderValue1: '1'
        correlations:
          - targetUID: tempo
            label: "Tempo traces"
            description: "Related traces stored in Tempo"
          - targetUID: prometheus
            label: "Logs to metrics"
            description: "Related metrics stored in Mimir"
            config:
              type: query
              target:
                expr: "{ job=\"$${__value.job\" }"
              field: "trace_id"
        jsonData:
          httpHeaderName1: 'X-Scope-OrgID'
          manageAlerts: false
          derivedFields:
            - name: "trace_id"
              matcherRegex: '"[tT]race[_-]?[iI][dD]":"(\w+)"'
              url: "$${__value.raw}"
              datasourceUid: tempo
            - name: "span_id"
              matcherRegex: '"[sS]pan[_-]?[iI][dD]":"(\w+)"'
              url: "{span:id=\"$${__value.raw}\"}"
              datasourceUid: tempo

      - name: Tempo
        editable: true
        type: tempo
        uid: tempo
        url: http://tempo-query-frontend.tempo:3100
        access: proxy
        jsonData:
          tracesToLogsV2:
            datasourceUid: 'loki'
            spanStartTimeShift: '-1m'
            spanEndTimeShift: '1m'
            tags:
              - key: "service.name"
                value: "service_name"
            filterByTraceID: true
            filterBySpanID: false
            customQuery: false
            # query: '{$${__tags}} |="$${__span.trace_id}" |= "$${__span.span_id}"'
          serviceMap:
            datasourceUid: 'prometheus'
          tracesToMetrics:
            datasourceUid: 'prometheus'
            spanStartTimeShift: '-1h'
            spanEndTimeShift: '1h'
            tags: [{ key: 'service.name', value: 'service' }]
            queries:
              - name: 'Metrics latency'
                query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
              - name: 'Metrics error rate'
                query: 'sum(rate(traces_spanmetrics_error_rate{$$__tags}[5m]))'
              - name: 'Metrics throughput'
                query: 'sum(rate(traces_spanmetrics_throughput{$$__tags}[5m]))'
              - name: 'Metrics duration'
                query: 'sum(rate(traces_spanmetrics_duration_sum{$$__tags}[5m]))'
          nodeGraph:
            enabled: true
          search:
            hide: false
          lokiSearch:
            datasourceUid: 'loki'
          traceQuery:
            timeShiftEnabled: true
            spanStartTimeShift: '1h'
            spanEndTimeShift: '-1h'
          spanBar:
            type: 'Tag'
            tag: 'http.path'

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

dashboards:
  default:
    loki:
      gnetId: 14055
      revision: 1
      datasource: prometheus
    cronjobs:
      gnetId: 14279
      revision: 1
      datasource: prometheus
    k8s-system-api-server:
      gnetId: 15761
      revision: 18
      datasource: prometheus
    k8s-views-pods:
      gnetId: 15760
      revision: 34
      datasource: prometheus
    k8s-views-nodes:
      gnetId: 15759
      revision: 32
      datasource: prometheus
    k8s-views-namespaces:
      gnetId: 15758
      revision: 41
      datasource: prometheus
    k8s-views-global:
      gnetId: 15757
      revision: 42
      datasource: prometheus
    k8s-system-coredns:
      gnetId: 15762
      revision: 19
      datasource: prometheus
    otel-collector:
      gnetId: 18309
      revision: 2
      datasource: prometheus
      disableDeletion: false
      allowUiUpdates: true
    goprocesses:
      gnetId: 6671
      revision: 2
      datasource: prometheus
    traefik:
      gnetId: 17347
      revision: 9
      datasource: prometheus
    cert-manager:
      gnetId: 22184
      revision: 3
      datasource: prometheus

sidecar:
  alerts:
    enabled: true
  dashboards:
    enabled: true

alerting:
  policies.yaml:
    apiVersion: 1
    policies:
      - orgId: 1
        receiver: teams

  rules.yaml:
    apiVersion: 1
    groups:
      - orgId: 1
        name: Default
        folder: Default
        interval: 1m
        rules:

          - uid: ae6i6rzk3pm9sa
            title: NumberOfNodes
            condition: C
            data:
              - refId: A
                relativeTimeRange:
                  from: 600
                  to: 0
                datasourceUid: prometheus
                model:
                  disableTextWrap: false
                  editorMode: builder
                  expr: sum(kube_node_info)
                  fullMetaSearch: false
                  includeNullMetadata: true
                  instant: true
                  intervalMs: 1000
                  legendFormat: __auto
                  maxDataPoints: 43200
                  range: false
                  refId: A
                  useBackend: false
              - refId: B
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params: []
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                          - B
                      reducer:
                        params: []
                        type: last
                      type: query
                  datasource:
                    type: __expr__
                    uid: __expr__
                  expression: A
                  intervalMs: 1000
                  maxDataPoints: 43200
                  reducer: last
                  refId: B
                  type: reduce
              - refId: C
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params:
                          - 3
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                          - C
                      reducer:
                        params: []
                        type: last
                      type: query
                  datasource:
                    type: __expr__
                    uid: __expr__
                  expression: B
                  intervalMs: 1000
                  maxDataPoints: 43200
                  refId: C
                  type: threshold
            noDataState: Alerting
            execErrState: Error
            for: 10m
            annotations: {}
            labels: {}
            isPaused: false
            notification_settings:
              receiver: grafana-default-email

          - uid: de6ihqxgtdjb4b
            title: NonRunningPods
            condition: B
            data:
              - refId: A
                relativeTimeRange:
                  from: 600
                  to: 0
                datasourceUid: prometheus
                model:
                  disableTextWrap: false
                  editorMode: code
                  expr: sum(kube_pod_status_phase{phase!="Running", phase!="Succeeded"}) by (pod)
                  fullMetaSearch: false
                  includeNullMetadata: true
                  instant: true
                  intervalMs: 1000
                  legendFormat: __auto
                  maxDataPoints: 43200
                  range: false
                  refId: A
                  useBackend: false
              - refId: B
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params:
                          - 0
                          - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params: []
                      reducer:
                        params: []
                        type: avg
                      type: query
                  datasource:
                    name: Expression
                    type: __expr__
                    uid: __expr__
                  expression: A
                  intervalMs: 1000
                  maxDataPoints: 43200
                  refId: B
                  type: threshold
            noDataState: NoData
            execErrState: Error
            for: 1m
            annotations: {}
            labels: {}
            isPaused: false

          - uid: ae6mbeyex19mod
            title: FailedJobs
            condition: C
            data:
              - refId: A
                relativeTimeRange:
                  from: 600
                  to: 0
                datasourceUid: prometheus
                model:
                  disableTextWrap: false
                  editorMode: builder
                  expr: kube_job_failed
                  fullMetaSearch: false
                  includeNullMetadata: true
                  instant: true
                  intervalMs: 1000
                  legendFormat: __auto
                  maxDataPoints: 43200
                  range: false
                  refId: A
                  useBackend: false
              - refId: C
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params:
                          - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                          - C
                      reducer:
                        params: []
                        type: last
                      type: query
                  datasource:
                    type: __expr__
                    uid: __expr__
                  expression: A
                  intervalMs: 1000
                  maxDataPoints: 43200
                  refId: C
                  type: threshold
            noDataState: NoData
            execErrState: Error
            for: 5m
            annotations: {}
            labels: {}
            isPaused: false
            notification_settings:
              receiver: teams

          - uid: ce6md5ivpbncwa
            title: CertificateExpiring
            condition: B
            data:
              - refId: A
                relativeTimeRange:
                  from: 600
                  to: 0
                datasourceUid: prometheus
                model:
                  editorMode: builder
                  expr: certmanager_certificate_expiration_timestamp_seconds
                  instant: true
                  intervalMs: 1000
                  legendFormat: __auto
                  maxDataPoints: 43200
                  range: false
                  refId: A
              - refId: B
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params:
                          - null
                          - 0
                        type: lt
                      operator:
                        type: and
                      query:
                        params: []
                      reducer:
                        params: []
                        type: avg
                      type: query
                  datasource:
                    name: Expression
                    type: __expr__
                    uid: __expr__
                  expression: A
                  intervalMs: 1000
                  maxDataPoints: 43200
                  refId: B
                  type: threshold
            noDataState: NoData
            execErrState: Error
            for: 5m
            annotations: {}
            labels: {}
            isPaused: false
            notification_settings:
              receiver: teams
          - uid: ae6mr9fbdwcg0a
            title: Neo4jCPU
            condition: B
            data:
              - refId: A
                relativeTimeRange:
                  from: 600
                  to: 0
                datasourceUid: prometheus
                model:
                  editorMode: code
                  expr: sum(rate(container_cpu_usage_seconds_total{namespace="persistence",container="neo4j"}[5m])) by (container)
                  instant: true
                  intervalMs: 1000
                  legendFormat: __auto
                  maxDataPoints: 43200
                  range: false
                  refId: A
              - refId: B
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params:
                          - 0.1
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                          - C
                      reducer:
                        params: []
                        type: last
                      type: query
                  datasource:
                    type: __expr__
                    uid: __expr__
                  expression: A
                  intervalMs: 1000
                  maxDataPoints: 43200
                  refId: B
                  type: threshold
            noDataState: NoData
            execErrState: Error
            for: 1m
            isPaused: false
            notification_settings:
              receiver: teams

          - uid: fe6muyxf0phc0e
            title: LogErrorRate
            condition: C
            data:
              - refId: A
                queryType: instant
                relativeTimeRange:
                  from: 600
                  to: 0
                datasourceUid: loki
                model:
                  datasource:
                    type: loki
                    uid: loki
                  editorMode: code
                  expr: |-
                    sum by (service_name) (
                      count_over_time({service_name=~".+"} |= "error" [5m])
                    )
                    /
                    sum by (service_name) (count_over_time({service_name=~".+"}[5m]))
                  hide: false
                  intervalMs: 1000
                  maxDataPoints: 43200
                  queryType: instant
                  refId: A
              - refId: C
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params:
                          - 0.5
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                          - C
                      reducer:
                        params: []
                        type: last
                      type: query
                  datasource:
                    type: __expr__
                    uid: __expr__
                  expression: A
                  intervalMs: 1000
                  maxDataPoints: 43200
                  refId: C
                  type: threshold
            noDataState: NoData
            execErrState: Error
            for: 10m
            isPaused: false
            notification_settings:
              receiver: teams

          - uid: de6mwhyduw4cgc
            title: SpanHTTPErrors
            condition: C
            data:
              - refId: A
                relativeTimeRange:
                  from: 600
                  to: 0
                datasourceUid: prometheus
                model:
                  editorMode: code
                  expr: sum(rate(traces_spanmetrics_calls{http_status_code=~"4..|5.."}[5m])) by (job)
                  instant: true
                  intervalMs: 1000
                  legendFormat: __auto
                  maxDataPoints: 43200
                  range: false
                  refId: A
              - refId: B
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params: []
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                          - B
                      reducer:
                        params: []
                        type: last
                      type: query
                  datasource:
                    type: __expr__
                    uid: __expr__
                  expression: A
                  intervalMs: 1000
                  maxDataPoints: 43200
                  reducer: last
                  refId: B
                  type: reduce
              - refId: C
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params:
                          - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                          - C
                      reducer:
                        params: []
                        type: last
                      type: query
                  datasource:
                    type: __expr__
                    uid: __expr__
                  expression: B
                  intervalMs: 1000
                  maxDataPoints: 43200
                  refId: C
                  type: threshold
            noDataState: NoData
            execErrState: Error
            for: 5m
            annotations: {}
            labels: {}
            isPaused: false
            notification_settings:
              receiver: teams

          - uid: de6mwuqgh4qgwf
            title: SlowSpans
            condition: C
            data:
              - refId: A
                relativeTimeRange:
                  from: 600
                  to: 0
                datasourceUid: prometheus
                model:
                  editorMode: code
                  expr: 'sum by (span_name, service) (traces_spanmetrics_latency_sum{service!="traefik"}) / sum by (span_name, service) (traces_spanmetrics_latency_count{service!="traefik"})'
                  instant: true
                  intervalMs: 1000
                  legendFormat: __auto
                  maxDataPoints: 43200
                  range: false
                  refId: A
              - refId: B
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params: []
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                          - B
                      reducer:
                        params: []
                        type: last
                      type: query
                  datasource:
                    type: __expr__
                    uid: __expr__
                  expression: A
                  intervalMs: 1000
                  maxDataPoints: 43200
                  reducer: last
                  refId: B
                  type: reduce
              - refId: C
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params:
                          - 1
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                          - C
                      reducer:
                        params: []
                        type: last
                      type: query
                  datasource:
                    type: __expr__
                    uid: __expr__
                  expression: B
                  intervalMs: 1000
                  maxDataPoints: 43200
                  refId: C
                  type: threshold
            noDataState: NoData
            execErrState: Error
            for: 5m
            annotations: {}
            labels: {}
            isPaused: false
            notification_settings:
              receiver: teams

          - uid: ae6n1w01oxn9ca
            title: SpansWithErrors
            condition: A
            data:
              - refId: A
                relativeTimeRange:
                  from: 600
                  to: 0
                datasourceUid: prometheus
                model:
                  editorMode: code
                  expr: sum(rate(traces_spanmetrics_calls_total{status_code="STATUS_CODE_ERROR"}[5m])) by (service,span_name)
                  instant: true
                  intervalMs: 1000
                  legendFormat: __auto
                  maxDataPoints: 43200
                  range: false
                  refId: A
              - refId: B
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params:
                          - 0
                          - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params: []
                      reducer:
                        params: []
                        type: avg
                      type: query
                  datasource:
                    name: Expression
                    type: __expr__
                    uid: __expr__
                  expression: A
                  intervalMs: 1000
                  maxDataPoints: 43200
                  refId: B
                  type: threshold
            noDataState: NoData
            execErrState: Error
            for: 5m
            annotations: {}
            labels: {}
            isPaused: false
            notification_settings:
              receiver: teams

          - uid: ce70j62zru8zkf
            title: DebugLogs
            condition: B
            data:
              - refId: A
                queryType: instant
                relativeTimeRange:
                  from: 600
                  to: 0
                datasourceUid: loki
                model:
                  datasource:
                    type: loki
                    uid: loki
                  editorMode: code
                  expr: |-
                    sum by (service_name) (
                      count_over_time({service_name=~".+"} |= "debug" [5m])
                    )
                  intervalMs: 1000
                  maxDataPoints: 43200
                  queryType: instant
                  refId: A
              - refId: B
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params:
                          - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                          - C
                      reducer:
                        params: []
                        type: last
                      type: query
                  datasource:
                    type: __expr__
                    uid: __expr__
                  expression: A
                  intervalMs: 1000
                  maxDataPoints: 43200
                  refId: B
                  type: threshold
            noDataState: NoData
            execErrState: Error
            for: 1m
            isPaused: false
            notification_settings:
              receiver: teams

          - uid: ce71gukuecs8wd
            title: UnavailableReplicas
            condition: B
            data:
              - refId: A
                relativeTimeRange:
                  from: 600
                  to: 0
                datasourceUid: prometheus
                model:
                  editorMode: code
                  expr: sum by (namespace,deployment) (kube_deployment_status_replicas_unavailable)
                  instant: true
                  intervalMs: 1000
                  legendFormat: __auto
                  maxDataPoints: 43200
                  range: false
                  refId: A
              - refId: B
                datasourceUid: __expr__
                model:
                  conditions:
                    - evaluator:
                        params:
                          - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                          - C
                      reducer:
                        params: []
                        type: last
                      type: query
                  datasource:
                    type: __expr__
                    uid: __expr__
                  expression: A
                  intervalMs: 1000
                  maxDataPoints: 43200
                  refId: B
                  type: threshold
            noDataState: NoData
            execErrState: Error
            for: 1m
            isPaused: false
            notification_settings:
              receiver: teams

  contactpoints.yaml:
    secret:
      apiVersion: 1
      contactPoints:
        - orgId: 1
          name: teams
          receivers:
            - uid: de6m2lrr32q69f
              type: teams
              settings:
                url: "https://prod-189.westeurope.logic.azure.com:443/workflows/47fa8c74680b495a978865dbf7f71b16/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=Rh__6szzv63B3vMCE_ohE15bELPsScxU1kGR7QaVVhs"
              disableResolveMessage: false

  templates.yaml:
    apiVersion: 1
    templates:
      - orgId: 1
        name: my_first_template
        template: |
          {{ `
          {{ define "my_first_template" }}
          Custom notification message
          {{ end }}
          ` }}

  mutetimes.yaml:
    apiVersion: 1
    muteTimes:
      - orgId: 1
        name: mti_1
        # refer to https://prometheus.io/docs/alerting/latest/configuration/#time_interval-0
        time_intervals:
          - times:
              - start_time: '06:00'
                end_time: '23:59'
            location: 'UTC'
            weekdays: [ 'monday:wednesday', 'saturday', 'sunday' ]
            months: [ '1:3', 'may:august', 'december' ]
            years: [ '2020:2022', '2030' ]
            days_of_month: [ '1:5', '-3:-1' ]

